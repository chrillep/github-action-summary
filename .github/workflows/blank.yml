# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com/chrillep/github-action-summary/docs/production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Job summary (updated)
        uses: actions/github-script@v6.3.3
        with:
          script: |
            await core.summary
              .addHeading('Test Results')
              .addCodeBlock(`generateTestResults()`, "js")
              .addTable([
                [{data: 'File', header: true}, {data: 'Result', header: true}],
                ['foo.js', 'Passs '],
                ['bar.js', 'Fail '],
                ['test.js', 'Pass ']
              ])
              .addLink('View staging deployment!', 'https://github.com')
              .write()

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: development
      url: https://github.com/chrillep/github-action-summary/docs/development
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Job summary (updated)
        uses: actions/github-script@v6.3.3
        with:
          script: |
            await core.summary
              .addHeading('Test Results')
              .addCodeBlock(`generateTestResults()`, "js")
              .addTable([
                [{data: 'File', header: true}, {data: 'Result', header: true}],
                ['foo.js', 'Pass '],
                ['bar.js', 'Fail '],
                ['test.js', 'Pass ']
              ])
              .addLink('View staging deployment!', 'https://github.com')
              .write()
  staging:
    name: Staging
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://github.com/chrillep/github-action-summary/docs/staging
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Job summary (updated)
        uses: actions/github-script@v6.3.3
        with:
          script: |
            await core.summary
              .addHeading('Test Results $')
              .addCodeBlock(`generateTestResults()`, "js")
              .addTable([
                [{data: 'File', header: true}, {data: 'Result', header: true}],
                ['foo.js', 'Pass '],
                ['bar.js', 'Fail '],
                ['test.js', 'Pass ']
              ])
              .addLink('View staging deployment!', 'https://github.com')
              .write()
